<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.kakusei.fams.mapper.IOrderMapper">
    <resultMap id="orderMap" type="xyz.kakusei.fams.entity.Order">
        <id property="id" column="id" />
        <result property="price" column="price" />
        <result property="ddl" column="ddl" />
        <result property="createTime" column="create_time" />
        <result property="processTime" column="process_time" />
        <result property="comments" column="comments" />
        <association property="creator" resultMap="xyz.kakusei.fams.mapper.IEmployeeMapper.EmployeeMap" columnPrefix="e_" />
        <association property="customer" javaType="xyz.kakusei.fams.entity.Customer" columnPrefix="c_">
            <id property="id" column="id" />
            <result property="name" column="name" />
            <result property="contact" column="contact" />
            <result property="comments" column="comments" />
        </association>
        <association property="state" javaType="xyz.kakusei.fams.entity.State" columnPrefix="os_">
            <id property="id" column="id" />
            <result property="name" column="name" />
        </association>
        <collection property="staffs" ofType="xyz.kakusei.fams.entity.Employee" select="xyz.kakusei.fams.mapper.IOrderEmployeeMapper.queryByOrderId" column="id" />
    </resultMap>
    <select id="queryAll" resultMap="orderMap">
        SELECT o.id, c.id AS c_id, c.name AS c_name, c.contact AS c_contact, c.comments AS c_comments,
               o.price, o.ddl, o.create_time, e.name AS e_name, os.id AS os_id, os.name AS os_name,
               o.process_time, o.comments, e.id AS e_id,e.birthday AS e_birthday, g.id AS e_g_id, g.name AS e_g_name,
               e.phone AS e_phone, e.email AS e_email, e.password AS e_password, e.address AS e_address,
               e.admin AS e_admin, e.hiredate AS e_hiredate, es.id AS e_es_id, es.name AS e_es_name,
               d.id AS e_d_id, d.name AS e_d_name, d.contact AS e_d_contact, d.comments AS e_d_comments
        FROM orders AS o LEFT JOIN customers AS c ON(o.cust_id = c.id)
            LEFT JOIN employees AS e ON(o.creator_id = e.id)
            LEFT JOIN order_states AS os ON(o.state_id = os.id)
            LEFT JOIN departments AS d ON(e.dept_id = d.id)
            LEFT JOIN employee_states AS es ON (e.state_id = es.id)
            LEFT JOIN gender AS g ON(e.gender = g.id)
    </select>
    <select id="queryById" parameterType="java.lang.Long" resultMap="orderMap">
        SELECT o.id, c.id AS c_id, c.name AS c_name, c.contact AS c_contact, c.comments AS c_comments,
               o.price, o.ddl, o.create_time, e.name AS e_name, os.id AS os_id, os.name AS os_name,
               o.process_time, o.comments, e.id AS e_id,e.birthday AS e_birthday, g.id AS e_g_id, g.name AS e_g_name,
               e.phone AS e_phone, e.email AS e_email, e.password AS e_password, e.address AS e_address,
               e.admin AS e_admin, e.hiredate AS e_hiredate, es.id AS e_es_id, es.name AS e_es_name,
               d.id AS e_d_id, d.name AS e_d_name, d.contact AS e_d_contact, d.comments AS e_d_comments
        FROM orders AS o LEFT JOIN customers AS c ON(o.cust_id = c.id)
                         LEFT JOIN employees AS e ON(o.creator_id = e.id)
                         LEFT JOIN order_states AS os ON(o.state_id = os.id)
                         LEFT JOIN departments AS d ON(e.dept_id = d.id)
                         LEFT JOIN employee_states AS es ON (e.state_id = es.id)
                         LEFT JOIN gender AS g ON(e.gender = g.id)
        WHERE o.id = #{orderId}
    </select>
    <select id="queryByCriteria" parameterType="xyz.kakusei.fams.query.OrderQueryObject" resultMap="orderMap">
        SELECT o.id, c.id AS c_id, c.name AS c_name, c.contact AS c_contact, c.comments AS c_comments,
               o.price, o.ddl, o.create_time, e.name AS e_name, os.id AS os_id, os.name AS os_name,
               o.process_time, o.comments, e.id AS e_id,e.birthday AS e_birthday, g.id AS e_g_id, g.name AS e_g_name,
               e.phone AS e_phone, e.email AS e_email, e.password AS e_password, e.address AS e_address,
               e.admin AS e_admin, e.hiredate AS e_hiredate, es.id AS e_es_id, es.name AS e_es_name,
               d.id AS e_d_id, d.name AS e_d_name, d.contact AS e_d_contact, d.comments AS e_d_comments
        FROM orders AS o LEFT JOIN customers AS c ON(o.cust_id = c.id)
                         LEFT JOIN employees AS e ON(o.creator_id = e.id)
                         LEFT JOIN order_states AS os ON(o.state_id = os.id)
                         LEFT JOIN departments AS d ON(e.dept_id = d.id)
                         LEFT JOIN employee_states AS es ON (e.state_id = es.id)
                         LEFT JOIN gender AS g ON(e.gender = g.id)
        <where>
            1 = 1
            <if test="customerId != null and customerId > 0">
                AND c.id = #{customerId}
            </if>
            <if test="creatorId != null and creatorId > 0">
                AND e.id = #{creatorId}
            </if>
            <if test="stateId != null and stateId > 0">
                AND os.id = #{stateId}
            </if>
            <if test="keyword != null and keyword != ''">
                AND o.comments LIKE CONCAT('%',#{keyword},'%')
            </if>
        </where>
    </select>
    <insert id="insert" parameterType="xyz.kakusei.fams.entity.Order" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO orders(cust_id, price, ddl, create_time, creator_id, state_id, comments)
            VALUES(#{customer.id}, #{price}, #{ddl}, #{createTime}, #{creator.id}, #{state.id}, #{processTime}, #{comments})
    </insert>
    <update id="update" parameterType="xyz.kakusei.fams.entity.Order">
        UPDATE orders SET   cust_id = #{customer.id}, price = #{price}, ddl = #{ddl}, comments = #{comments},
                            state_id = #{state.id}, process_time = #{processTime}
        WHERE id = #{id}
    </update>
    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM orders WHERE id = #{id}
    </delete>
</mapper>